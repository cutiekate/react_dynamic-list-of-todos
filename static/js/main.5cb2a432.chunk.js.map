{"version":3,"sources":["helpers/api.ts","App.tsx","index.tsx"],"names":["getAll","url","fetch","then","response","json","App","useState","initialTodos","setInitialTodos","todos","setTodos","isLoading","setIsLoading","handleLoadClick","a","todosFromServer","usersFromServer","todosWithUsers","map","todo","user","find","id","userId","className","length","type","onClick","sortedTodos","sort","b","title","localeCompare","Number","completed","name","checked","disabled","ReactDOM","render","document","getElementById"],"mappings":"iSAeMA,G,MAAS,SAAIC,GACjB,OAAOC,MAhBO,uCAgBSD,GACpBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCiGhBC,EA7GH,WAAO,IAAD,EACwBC,mBAAiB,IADzC,mBACTC,EADS,KACKC,EADL,OAEUF,mBAAiB,IAF3B,mBAETG,EAFS,KAEFC,EAFE,OAGkBJ,oBAAS,GAH3B,mBAGTK,EAHS,KAGEC,EAHF,KAKVC,EAAe,uCAAG,gCAAAC,EAAA,6DACtBF,GAAa,GADS,SDWIb,EAAa,UCXjB,cAGhBgB,EAHgB,gBDUIhB,EAAa,UCVjB,OAIhBiB,EAJgB,OAMhBC,EAAiBF,EAAgBG,KAAI,SAAAC,GAAI,kCAC1CA,GAD0C,IAE7CC,KAAMJ,EAAgBK,MAAK,SAAAD,GAAI,OAAIA,EAAKE,KAAOH,EAAKI,eAGtDf,EAAgBS,GAChBP,EAASO,GAZa,4CAAH,qDA6CrB,OACE,yBAAKO,UAAU,aACb,wBAAIA,UAAU,UAAd,yBACkB,IAAjBf,EAAMgB,OACL,4BAAQD,UAAU,SAASE,KAAK,SAASC,QAASd,GAC/CF,EAAY,aAAe,QAG9B,oCACE,2BACE,4BACEa,UAAU,qBACVG,QA1CE,WACZjB,EAASH,IA0CCmB,KAAK,UAHP,SAOA,4BACEF,UAAU,qBACVG,QA7CQ,WAClB,IAAMC,EAAc,YAAIrB,GAAcsB,MAAK,SAACf,EAAGgB,GAC7C,OAAOhB,EAAEiB,MAAMC,cAAcF,EAAEC,UAGjCrB,EAASkB,IAyCCF,KAAK,UAHP,iBAOA,4BACEF,UAAU,qBACVG,QA5CY,WACtB,IAAMC,EAAc,YAAIrB,GAAcsB,MAAK,SAACf,EAAGgB,GAC7C,OAAOG,OAAOnB,EAAEoB,WAAaD,OAAOH,EAAEI,cAGxCxB,EAASkB,IAwCCF,KAAK,UAHP,qBAOA,4BACEF,UAAU,qBACVG,QA3CW,WACrB,IAAMC,EAAc,YAAIrB,GAAcsB,MAAK,SAACf,EAAGgB,GAC7C,OAAQhB,EAAEM,MAAQU,EAAEV,KAChBN,EAAEM,KAAKe,KAAKH,cAAcF,EAAEV,KAAKe,MACjC,KAGNzB,EAASkB,IAqCCF,KAAK,UAHP,sBASF,wBAAIF,UAAU,SACXf,EAAMS,KAAI,SAAAC,GAAI,OACb,wBAAIK,UAAU,QACZ,2BAAOE,KAAK,WAAWU,QAASjB,EAAKe,UAAWG,UAAQ,IAD1D,UAEMlB,EAAKY,MAFX,KAGE,0BAAMP,UAAU,QACbL,EAAKC,KAAOD,EAAKC,KAAKe,KAAO,mBCjGhDG,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5cb2a432.chunk.js","sourcesContent":["const API_URL = 'https://jsonplaceholder.typicode.com';\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(API_URL + url)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => getAll<User>('/users');\nexport const getTodos = () => getAll<Todo>('/todos');\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { getUsers, getTodos, Todo } from './helpers/api';\n\nconst App = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLoadClick = async () => {\n    setIsLoading(true);\n\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUsers();\n\n    const todosWithUsers = todosFromServer.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    }));\n\n    setInitialTodos(todosWithUsers);\n    setTodos(todosWithUsers);\n  };\n\n  const reset = () => {\n    setTodos(initialTodos);\n  };\n\n  const sortByTitle = () => {\n    const sortedTodos = [...initialTodos].sort((a, b) => {\n      return a.title.localeCompare(b.title);\n    });\n\n    setTodos(sortedTodos);\n  };\n\n  const sortByCompleted = () => {\n    const sortedTodos = [...initialTodos].sort((a, b) => {\n      return Number(a.completed) - Number(b.completed);\n    });\n\n    setTodos(sortedTodos);\n  };\n\n  const sortByUserName = () => {\n    const sortedTodos = [...initialTodos].sort((a, b) => {\n      return (a.user && b.user)\n        ? a.user.name.localeCompare(b.user.name)\n        : 0;\n    });\n\n    setTodos(sortedTodos);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"header\">Dynamic list of TODOs</h1>\n      {todos.length === 0 ? (\n        <button className=\"button\" type=\"button\" onClick={handleLoadClick}>\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      ) : (\n        <>\n          <p>\n            <button\n              className=\"button button-sort\"\n              onClick={reset}\n              type=\"button\"\n            >\n              Reset\n            </button>\n            <button\n              className=\"button button-sort\"\n              onClick={sortByTitle}\n              type=\"button\"\n            >\n              Sort by title\n            </button>\n            <button\n              className=\"button button-sort\"\n              onClick={sortByCompleted}\n              type=\"button\"\n            >\n              Sort by completed\n            </button>\n            <button\n              className=\"button button-sort\"\n              onClick={sortByUserName}\n              type=\"button\"\n            >\n              Sort by user name\n            </button>\n\n          </p>\n          <ul className=\"todos\">\n            {todos.map(todo => (\n              <li className=\"todo\">\n                <input type=\"checkbox\" checked={todo.completed} disabled />\n                {`${todo.title} `}\n                <span className=\"user\">\n                  {todo.user ? todo.user.name : 'Unknown'}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}